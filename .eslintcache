[{"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\index.js":"1","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\common\\InputField.js":"2","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\AppBar\\AppBar.js":"3","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Food\\FoodsList.js":"4","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Graph\\Graph.js":"5","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Food\\NewFoodForm.js":"6","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Food\\FoodItem.js":"7","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\AddButton.js":"8","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\WebRouter.js":"9","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Foods.js":"10"},{"size":476,"mtime":1627616399497,"results":"11","hashOfConfig":"12"},{"size":351,"mtime":1627262657172,"results":"13","hashOfConfig":"12"},{"size":754,"mtime":1626629412513,"results":"14","hashOfConfig":"12"},{"size":559,"mtime":1626629412516,"results":"15","hashOfConfig":"12"},{"size":1106,"mtime":1627262657166,"results":"16","hashOfConfig":"12"},{"size":3453,"mtime":1627615554492,"results":"17","hashOfConfig":"12"},{"size":801,"mtime":1627262657144,"results":"18","hashOfConfig":"12"},{"size":362,"mtime":1627615591506,"results":"19","hashOfConfig":"12"},{"size":1091,"mtime":1627616708356,"results":"20","hashOfConfig":"12"},{"size":2844,"mtime":1627616815184,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yid7dw",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\index.js",[],"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\common\\InputField.js",[],["47","48"],"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\AppBar\\AppBar.js",["49","50","51","52","53","54","55","56"],"import './AppBar.css'\r\nimport { useState } from 'react'\r\nexport default function AppBar(props) {\r\n\r\n    const [totalCalories, setTotalCalories] = useState(0)\r\n    const [totalProtein, setTotalProtein] = useState(0)\r\n    const [totalCarbs, setTotalCarbs] = useState(0)\r\n    const [totalFat, setTotalFat] = useState(0)\r\n\r\n    return (\r\n        <div className='appbar'>\r\n            <div className='title'>\r\n                <h2>Totals</h2>\r\n            </div>\r\n            <div className='totals'>\r\n                <h3>Calories: {props.data.calories}</h3>\r\n                <h3>Protein: {props.data.protein}</h3>\r\n                <h3>Carbs: {props.data.carbs}</h3>\r\n                <h3>Fat: {props.data.fat}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Food\\FoodsList.js",[],"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Graph\\Graph.js",[],"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Food\\NewFoodForm.js",["57"],"import './NewFoodForm.css'\r\nimport InputField from '../../common/InputField'\r\nimport { useState } from 'react'\r\n\r\nexport default function NewFoodForm(props) {\r\n\r\n    const [foodName, setFoodName] = useState('')\r\n    const [foodCalories, setFoodCalories] = useState('')\r\n    const [foodProtein, setFoodProtein] = useState('')\r\n    const [foodCarbs, setFoodCarbs] = useState('')\r\n    const [foodFat, setFoodFat] = useState('')\r\n    const [formValidity, setFormValidity] = useState(false)\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        if(foodName === '' || foodCalories === '' || foodProtein === '' || foodCarbs === '' || foodFat === '') {\r\n            setFormValidity(false)\r\n        }\r\n        if(!formValidity) {\r\n\r\n        }\r\n            const newFood = {\r\n                id: Math.random(),\r\n                name: foodName,\r\n                calories: foodCalories,\r\n                protein: foodProtein,\r\n                carbs: foodCarbs,\r\n                fat: foodFat\r\n            }\r\n            {props.addNewFood(newFood)}\r\n            setFoodName('')\r\n            setFoodCalories('')\r\n            setFoodProtein('')\r\n            setFoodCarbs('')\r\n            setFoodFat('')\r\n    }\r\n\r\n    const nameChangeHandler = (e) => {\r\n        setFoodName(e.target.value)\r\n    }\r\n\r\n    const calorieChangeHandler = (e) => {\r\n        setFoodCalories(parseFloat(e.target.value))\r\n    }\r\n\r\n    const proteinChangeHandler = (e) => {\r\n        setFoodProtein(parseFloat(e.target.value))\r\n    }\r\n\r\n    const carbsChangeHandler = (e) => {\r\n        setFoodCarbs(parseFloat(e.target.value))\r\n    }\r\n\r\n    const fatChangeHandler = (e) => {\r\n        setFoodFat(parseFloat(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className='form-card'>\r\n            <form onSubmit={submitHandler}>\r\n                <section>\r\n                    <div className='form-base__name'>\r\n                        <InputField label='Name of Food' type='text' onChange={nameChangeHandler} value={foodName} id='name'/>\r\n                    </div>\r\n                    <div className='form-base__calories'>\r\n                        <InputField label='Calorie Amount' type='number' onChange={calorieChangeHandler} value={foodCalories} id='calories'/>\r\n                    </div>\r\n                </section>\r\n                <br/>\r\n                <section>\r\n                    <div className='form-macros__protein'>\r\n                        <InputField label='Protein Amount (g)' type='number' onChange={proteinChangeHandler} value={foodProtein} id='protein'/>\r\n                    </div>\r\n                    <div className='form-macros__carbs'>\r\n                        <InputField label='Carbs Amount (g)' type='number' onChange={carbsChangeHandler} value={foodCarbs} id='carbs'/>\r\n                    </div>\r\n                    <div className='form-macros__fat'>\r\n                        <InputField label='Fat Amount (g)' type='number' onChange={fatChangeHandler} value={foodFat} id='fat'/>\r\n                    </div>\r\n                </section>\r\n                <br/>\r\n                <section>\r\n                    <div className='button'>\r\n                        <button type='reset'  id='closeFormButton' onClick={props.closeOnClick}>Close</button>\r\n                        <button type='submit' id='addFoodButton'>Add Item</button>\r\n                    </div>\r\n\r\n                </section>\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Food\\FoodItem.js",[],"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\AddButton.js",["58"],"import './AddButton.css'\r\nexport default function AddButton(props) {\r\n\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <button className='show-form' onClick={props.onClick}>\r\n            <text className= 'plus-sign'>+</text>\r\n        </button>\r\n    )\r\n}","C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\WebRouter.js",[],"C:\\Users\\Jack\\Documents\\GitHub\\calorie-tracker\\src\\components\\FoodItemPage\\Foods.js",["59"],"import './Foods.css';\r\nimport FoodsList from './Food/FoodsList'\r\nimport AppBar from './AppBar/AppBar'\r\nimport Graph from './Graph/Graph'\r\nimport NewFoodForm from './Food/NewFoodForm'\r\nimport AddButton from './AddButton'\r\nimport { useState } from 'react'\r\n\r\nconst DUMMY_DATA = [{\r\n  id: 1,\r\n  name: 'Chicken Breast',\r\n  calories: 165,\r\n  protein: 31,\r\n  carbs: 0,\r\n  fat: 3.6\r\n},\r\n{\r\n  id: 2,\r\n  name: 'Jasmine Rice',\r\n  calories: 170,\r\n  protein: 3.8,\r\n  carbs: 32.1,\r\n  fat: 2.5\r\n},\r\n{\r\n  id: 3,\r\n  name: 'Chickpeas',\r\n  calories: 364,\r\n  protein: 19,\r\n  carbs: 61,\r\n  fat: 6\r\n}\r\n]\r\n\r\n// DUMMY_DATA.forEach((element) => {console.log(element.name)})\r\n\r\nfunction App() {\r\n\r\n  const [foods, setFoods] = useState([])\r\n  const [totalCalories, setTotalCalories] = useState(0)\r\n  const [totalProtein, setTotalProtein] = useState(0)\r\n  const [totalCarbs, setTotalCarbs] = useState(0)\r\n  const [totalFat, setTotalFat] = useState(0)\r\n  const [showForm, setShowForm] = useState(true)\r\n\r\n  const scrollAndShowForm = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n    if(showForm) {\r\n      setShowForm(false)\r\n      return\r\n    }\r\n    setShowForm(true)\r\n  }\r\n\r\n  const closeForm = () => {\r\n    setShowForm(false)\r\n  }\r\n\r\n  const addFoodItem = (food) => {\r\n    setFoods((prevFoods) => {\r\n      return [food, ...prevFoods]\r\n    })\r\n\r\n    setTotalCalories((prevCaloriesAmount) => {\r\n      return prevCaloriesAmount += food.calories\r\n    })\r\n\r\n    setTotalProtein((prevProteinAmount) => { \r\n      return prevProteinAmount += food.protein\r\n    })\r\n\r\n    setTotalCarbs((prevCarbsAmount) => { \r\n      return prevCarbsAmount += food.carbs\r\n    })\r\n\r\n    setTotalFat((prevFatAmount) => { \r\n      return prevFatAmount += food.fat\r\n    })\r\n\r\n    console.log(totalProtein)\r\n  }\r\n\r\n  const macro_data = {\r\n    calories: totalCalories,\r\n    protein: totalProtein,\r\n    carbs: totalCarbs,\r\n    fat: totalFat\r\n  }\r\n  \r\n  if(showForm) {\r\n    return (\r\n      <div className='App'>\r\n          <AppBar data={macro_data}/>\r\n          <Graph data={macro_data} />\r\n          <div className='ur-mom'>\r\n            <div className='middle-content'>\r\n                <NewFoodForm addNewFood={addFoodItem} closeOnClick={closeForm}/>\r\n                <FoodsList food={foods} />\r\n                {/* <Graph data={macro_data} /> */}\r\n            </div>\r\n          </div>\r\n          <AddButton onClick={scrollAndShowForm}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <div className='App'>\r\n          <AppBar data={macro_data}/>\r\n          <Graph data={macro_data} />\r\n          <div className='ur-mom'>\r\n            <div className='middle-content'>\r\n                <FoodsList food={foods} />\r\n            </div>\r\n          </div>\r\n          <AddButton onClick={scrollAndShowForm}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":12,"nodeType":"66","messageId":"67","endLine":5,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":5,"column":27,"nodeType":"66","messageId":"67","endLine":5,"endColumn":43},{"ruleId":"64","severity":1,"message":"69","line":6,"column":12,"nodeType":"66","messageId":"67","endLine":6,"endColumn":24},{"ruleId":"64","severity":1,"message":"70","line":6,"column":26,"nodeType":"66","messageId":"67","endLine":6,"endColumn":41},{"ruleId":"64","severity":1,"message":"71","line":7,"column":12,"nodeType":"66","messageId":"67","endLine":7,"endColumn":22},{"ruleId":"64","severity":1,"message":"72","line":7,"column":24,"nodeType":"66","messageId":"67","endLine":7,"endColumn":37},{"ruleId":"64","severity":1,"message":"73","line":8,"column":12,"nodeType":"66","messageId":"67","endLine":8,"endColumn":20},{"ruleId":"64","severity":1,"message":"74","line":8,"column":22,"nodeType":"66","messageId":"67","endLine":8,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":31,"column":13,"nodeType":"77","messageId":"78","endLine":31,"endColumn":40},{"ruleId":"64","severity":1,"message":"79","line":4,"column":11,"nodeType":"66","messageId":"67","endLine":4,"endColumn":22},{"ruleId":"64","severity":1,"message":"80","line":9,"column":7,"nodeType":"66","messageId":"67","endLine":9,"endColumn":17},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'totalCalories' is assigned a value but never used.","Identifier","unusedVar","'setTotalCalories' is assigned a value but never used.","'totalProtein' is assigned a value but never used.","'setTotalProtein' is assigned a value but never used.","'totalCarbs' is assigned a value but never used.","'setTotalCarbs' is assigned a value but never used.","'totalFat' is assigned a value but never used.","'setTotalFat' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'scrollToTop' is assigned a value but never used.","'DUMMY_DATA' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]